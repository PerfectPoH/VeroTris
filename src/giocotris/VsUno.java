/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package giocotris;

import java.util.Random;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;

/**
 *
 * @author Niccolo'
 */

public class VsUno extends javax.swing.JFrame {

    /**
     * Creates new form VsUno
     */
    public VsUno() {
        initComponents();
    }
    
     int[][] tris = new int[3][3];
    private String currentPlayer;

    Random random = new Random();
    ImageIcon iconZero = new ImageIcon("o.jpg");
    ImageIcon iconX = new ImageIcon("x.jpg");
    private int po=0;
    private int px=0;

    public void inizializzaMatrice() {
        int num = random.nextInt(2);
        System.out.println(num);
        if(num==0){
            currentPlayer = "x";
            jLabel2.setIcon(iconX);
        }else{
            currentPlayer = "o";
            jLabel2.setIcon(iconZero);
        }
        tris[0][0] = 0;
        tris[0][1] = 0;
        tris[0][2] = 0;
        tris[1][0] = 0;
        tris[1][1] = 0;
        tris[1][2] = 0;
        tris[2][0] = 0;
        tris[2][1] = 0;
        tris[2][2] = 0;
         
        System.out.println(currentPlayer);
    }

    public boolean isBoardFull() {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                if (tris[i][j] == 0) {
                    return false;
                }
            }
        }
        return true;
    }

    public boolean checkForWin() {
        return (checkRowsWin() || checkColumnsWin() || checkDiagonalsWin());
    }

    private boolean checkRowsWin() {
        for (int i = 0; i < 3; i++) {
            if (checkRowCol(tris[i][0], tris[i][1], tris[i][2])) {
                return true;
            }
        }
        return false;
    }

    private boolean checkColumnsWin() {
        for (int i = 0; i < 3; i++) {
            if (checkRowCol(tris[0][i], tris[1][i], tris[2][i])) {
                return true;
            }
        }
        return false;
    }

    private boolean checkDiagonalsWin() {
        return ((checkRowCol(tris[0][0], tris[1][1], tris[2][2]))
                || (checkRowCol(tris[0][2], tris[1][1], tris[2][0])));
    }

    private boolean checkRowCol(int c1, int c2, int c3) {
        if (c1 == c2 && c2 == c3 && c2 != 0) {
            return true;
        } else {
            return false;
        }
    }

    private void resetBoard() {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                ImageIcon icon = new ImageIcon("miniSfondo.jpg");
                jButton1.setIcon(icon);
                jButton2.setIcon(icon);
                jButton3.setIcon(icon);
                jButton4.setIcon(icon);
                jButton5.setIcon(icon);
                jButton6.setIcon(icon);
                jButton7.setIcon(icon);
                jButton8.setIcon(icon);
                jButton9.setIcon(icon);
            }
        }
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BtnBack = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        NewGame = new javax.swing.JButton();
        Punteggio0 = new javax.swing.JLabel();
        PunteggioX = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabelTac = new javax.swing.JLabel();
        jLabelToe = new javax.swing.JLabel();
        jLabelTic = new javax.swing.JLabel();
        BtnSetting = new javax.swing.JButton();
        Sfondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BtnBack.setBorderPainted(false);
        BtnBack.setContentAreaFilled(false);
        BtnBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BtnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBackActionPerformed(evt);
            }
        });
        getContentPane().add(BtnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 60, 70));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(243, 70, 70));
        jLabel3.setText("Player 0");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 150, -1, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(243, 70, 70));
        jLabel1.setText("E' il turno di");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 30, -1, -1));
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 20, 60, 50));

        NewGame.setFont(new java.awt.Font("Liberation Sans", 1, 11)); // NOI18N
        NewGame.setText("New game ");
        NewGame.setBorderPainted(false);
        NewGame.setContentAreaFilled(false);
        NewGame.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        NewGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewGameActionPerformed(evt);
            }
        });
        getContentPane().add(NewGame, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 360, 100, 40));

        Punteggio0.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        Punteggio0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(Punteggio0, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 190, 30, 50));

        PunteggioX.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        PunteggioX.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(PunteggioX, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 190, 30, 50));

        jButton5.setBorderPainted(false);
        jButton5.setContentAreaFilled(false);
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 180, 60, 60));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(243, 70, 70));
        jLabel4.setText("Player X");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 150, -1, -1));

        jButton6.setBorderPainted(false);
        jButton6.setContentAreaFilled(false);
        jButton6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 180, 60, 60));

        jButton9.setBorderPainted(false);
        jButton9.setContentAreaFilled(false);
        jButton9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 260, 60, 60));

        jButton8.setBorderPainted(false);
        jButton8.setContentAreaFilled(false);
        jButton8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 260, 60, 60));

        jButton7.setBorderPainted(false);
        jButton7.setContentAreaFilled(false);
        jButton7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 260, 60, 60));

        jButton2.setBorderPainted(false);
        jButton2.setContentAreaFilled(false);
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.setMaximumSize(new java.awt.Dimension(60, 60));
        jButton2.setPreferredSize(new java.awt.Dimension(60, 60));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 100, 60, 60));

        jButton4.setBorderPainted(false);
        jButton4.setContentAreaFilled(false);
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 180, 60, 60));

        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 100, 60, 60));

        jButton3.setBorderPainted(false);
        jButton3.setContentAreaFilled(false);
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 100, 60, 60));

        jLabelTac.setFont(new java.awt.Font("Impact", 1, 24)); // NOI18N
        jLabelTac.setForeground(new java.awt.Color(243, 70, 70));
        jLabelTac.setText("T A C");
        getContentPane().add(jLabelTac, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, -1, 30));

        jLabelToe.setFont(new java.awt.Font("Impact", 1, 24)); // NOI18N
        jLabelToe.setForeground(new java.awt.Color(243, 70, 70));
        jLabelToe.setText("T O E");
        getContentPane().add(jLabelToe, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, -1, -1));

        jLabelTic.setFont(new java.awt.Font("Impact", 1, 24)); // NOI18N
        jLabelTic.setForeground(new java.awt.Color(243, 70, 70));
        jLabelTic.setText("T I C");
        getContentPane().add(jLabelTic, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        BtnSetting.setIcon(new javax.swing.ImageIcon(getClass().getResource("/giocotris/gear.png"))); // NOI18N
        BtnSetting.setBorderPainted(false);
        BtnSetting.setContentAreaFilled(false);
        BtnSetting.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(BtnSetting, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 20, 50, 50));

        Sfondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/giocotris/base.jpg"))); // NOI18N
        Sfondo.setText("jLabel1");
        getContentPane().add(Sfondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(-3, 0, 750, 418));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBackActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        HomePage home = new HomePage();
        home.setVisible(true);
    }//GEN-LAST:event_BtnBackActionPerformed

    private void NewGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewGameActionPerformed
        // TODO add your handling code here:
        po = 0;
         px = 0;
         PunteggioX.setText("" + px);
         Punteggio0.setText("" + px);
        resetBoard();
        inizializzaMatrice();
        
    }//GEN-LAST:event_NewGameActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (currentPlayer.equals("x")) {
            jButton1.setIcon(iconX);
            tris[0][0] = 1;
            currentPlayer="o";
            jLabel2.setIcon(iconZero);
        } else {
            jButton1.setIcon(iconZero);
            tris[0][0] = 2;
            currentPlayer= "x";
            jLabel2.setIcon(iconX);
        }
        if (isBoardFull()) {
            JOptionPane.showMessageDialog(rootPane, "PAREGGIO", "Partita finita", HEIGHT);
        }
        if (checkForWin()) {
            if (currentPlayer.equals("o")) {
                px++;
                JOptionPane.showMessageDialog(rootPane, "ha vinto", "Partita terminata ", HEIGHT, iconX);
                PunteggioX.setText("" + px);
            } else {
                po++;
                JOptionPane.showMessageDialog(rootPane, "ha vinto", "Partita terminata ", HEIGHT, iconZero);
                Punteggio0.setText(""+po);
            }
        }
        if(checkForWin() || isBoardFull()){
            resetBoard();
            inizializzaMatrice();   
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (currentPlayer.equals("x")) {
            jButton3.setIcon(iconX);
            tris[0][2] = 1;
            currentPlayer="o";
            jLabel2.setIcon(iconZero);
        } else {
            jButton3.setIcon(iconZero);
            tris[0][2] = 2;
            currentPlayer= "x";
            jLabel2.setIcon(iconX);
        }
        if (isBoardFull()) {
            JOptionPane.showMessageDialog(rootPane, "PAREGGIO", "Partita finita", HEIGHT);
        }
          if (checkForWin()) {
            if (currentPlayer.equals("o")) {
                px++;
                JOptionPane.showMessageDialog(rootPane, "ha vinto", "Partita terminata ", HEIGHT, iconX);
                PunteggioX.setText("" + px);
            } else {
                po++;
                JOptionPane.showMessageDialog(rootPane, "ha vinto", "Partita terminata ", HEIGHT, iconZero);
                Punteggio0.setText(""+po);
            }
        }
          if(checkForWin() || isBoardFull()){
            resetBoard();
            inizializzaMatrice();   
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if (currentPlayer.equals("x")) {
            jButton4.setIcon(iconX);
            tris[1][0] = 1;
            currentPlayer="o";
            jLabel2.setIcon(iconZero);
        } else {
            jButton4.setIcon(iconZero);
            tris[1][0] = 2;
            currentPlayer= "x";
            jLabel2.setIcon(iconX);
        }
        if (isBoardFull()) {
            JOptionPane.showMessageDialog(rootPane, "PAREGGIO", "Partita finita", HEIGHT);
        }
        if (checkForWin()) {
            if (currentPlayer.equals("o")) {
                px++;
                JOptionPane.showMessageDialog(rootPane, "ha vinto", "Partita terminata ", HEIGHT, iconX);
                PunteggioX.setText("" + px);
            } else {
                po++;
                JOptionPane.showMessageDialog(rootPane, "ha vinto", "Partita terminata ", HEIGHT, iconZero);
                Punteggio0.setText(""+po);
            }
        }
        if(checkForWin() || isBoardFull()){
            resetBoard();
            inizializzaMatrice();   
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        if (currentPlayer.equals("x")) {
            jButton5.setIcon(iconX);
            tris[1][1] = 1;
            currentPlayer="o";
            jLabel2.setIcon(iconZero);
        } else {
            jButton5.setIcon(iconZero);
            tris[1][1] = 2;
            currentPlayer= "x";
            jLabel2.setIcon(iconX);
        }
        if (isBoardFull()) {
            JOptionPane.showMessageDialog(rootPane, "PAREGGIO", "Partita finita", HEIGHT);
        }
        if (checkForWin()) {
            if (currentPlayer.equals("o")) {
                px++;
                JOptionPane.showMessageDialog(rootPane, "ha vinto", "Partita terminata ", HEIGHT, iconX);
                PunteggioX.setText("" + px);
            } else {
                po++;
                JOptionPane.showMessageDialog(rootPane, "ha vinto", "Partita terminata ", HEIGHT, iconZero);
                Punteggio0.setText(""+po);
            }
        }
        if(checkForWin() || isBoardFull()){
            resetBoard();
            inizializzaMatrice();   
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        if (currentPlayer.equals("x")) {
            jButton6.setIcon(iconX);
            tris[1][2] = 1;
            currentPlayer="o";
            jLabel2.setIcon(iconZero);
        } else {
            jButton6.setIcon(iconZero);
            tris[1][2] = 2;
            currentPlayer= "x";
            jLabel2.setIcon(iconX);
        }
        if (isBoardFull()) {
            JOptionPane.showMessageDialog(rootPane, "PAREGGIO", "Partita finita", HEIGHT);
        }
        if (checkForWin()) {
            if (currentPlayer.equals("o")) {
                px++;
                JOptionPane.showMessageDialog(rootPane, "ha vinto", "Partita terminata ", HEIGHT, iconX);
                PunteggioX.setText("" + px);
            } else {
                po++;
                JOptionPane.showMessageDialog(rootPane, "ha vinto", "Partita terminata ", HEIGHT, iconZero);
                Punteggio0.setText(""+po);
            }
        }
        if(checkForWin() || isBoardFull()){
            resetBoard();
            inizializzaMatrice();   
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        if (currentPlayer.equals("x")) {
            jButton7.setIcon(iconX);
            tris[2][0] = 1;
            currentPlayer="o";
            jLabel2.setIcon(iconZero);
        } else {
            jButton7.setIcon(iconZero);
            tris[2][0] = 2;
            currentPlayer= "x";
            jLabel2.setIcon(iconX);
        }
        if (isBoardFull()) {
            JOptionPane.showMessageDialog(rootPane, "PAREGGIO", "Partita finita", HEIGHT);
        }
        if (checkForWin()) {
            if (currentPlayer.equals("o")) {
                px++;
                JOptionPane.showMessageDialog(rootPane, "ha vinto", "Partita terminata ", HEIGHT, iconX);
                PunteggioX.setText("" + px);
            } else {
                po++;
                JOptionPane.showMessageDialog(rootPane, "ha vinto", "Partita terminata ", HEIGHT, iconZero);
                Punteggio0.setText(""+po);
            }
        }
        if(checkForWin() || isBoardFull()){
            resetBoard();
            inizializzaMatrice();   
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        if (currentPlayer.equals("x")) {
            jButton8.setIcon(iconX);
            tris[2][1] = 1;
            currentPlayer="o";
            jLabel2.setIcon(iconZero);
        } else {
            jButton8.setIcon(iconZero);
            tris[2][1] = 2;
            currentPlayer= "x";
            jLabel2.setIcon(iconX);
        }
        if (isBoardFull()) {
            JOptionPane.showMessageDialog(rootPane, "PAREGGIO", "Partita finita", HEIGHT);
        }
        if (checkForWin()) {
            if (currentPlayer.equals("o")) {
                px++;
                JOptionPane.showMessageDialog(rootPane, "ha vinto", "Partita terminata ", HEIGHT, iconX);
                PunteggioX.setText("" + px);
            } else {
                po++;
                JOptionPane.showMessageDialog(rootPane, "ha vinto", "Partita terminata ", HEIGHT, iconZero);
                Punteggio0.setText(""+po);
            }
        }
        if(checkForWin() || isBoardFull()){
            resetBoard();
            inizializzaMatrice();   
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        if (currentPlayer.equals("x")) {
            jButton9.setIcon(iconX);
            tris[2][2] = 1;
            currentPlayer="o";
            jLabel2.setIcon(iconZero);
        } else {
            jButton9.setIcon(iconZero);
            tris[2][2] = 2;
            currentPlayer= "x";
            jLabel2.setIcon(iconX);
        }
        if (isBoardFull()) {
            JOptionPane.showMessageDialog(rootPane, "PAREGGIO", "Partita finita", HEIGHT);
        }
         if (checkForWin()) {
            if (currentPlayer.equals("o")) {
                px++;
                JOptionPane.showMessageDialog(rootPane, "ha vinto", "Partita terminata ", HEIGHT, iconX);
                PunteggioX.setText("" + px);
            } else {
                po++;
                JOptionPane.showMessageDialog(rootPane, "ha vinto", "Partita terminata ", HEIGHT, iconZero);
                Punteggio0.setText(""+po);
            }
        }
         if(checkForWin() || isBoardFull()){
            resetBoard();
            inizializzaMatrice();   
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (currentPlayer.equals("x")) {
            jButton2.setIcon(iconX);
            tris[0][1] = 1;
            currentPlayer = "o";
            jLabel2.setIcon(iconZero);
        } else {
            jButton2.setIcon(iconZero);
            tris[0][1] = 2;
            currentPlayer= "x";
            jLabel2.setIcon(iconX);
        }
        if (isBoardFull()) {
            JOptionPane.showMessageDialog(rootPane, "PAREGGIO", "Partita finita", HEIGHT);
        }
         if (checkForWin()) {
            if (currentPlayer.equals("o")) {
                px++;
                JOptionPane.showMessageDialog(rootPane, "ha vinto", "Partita terminata ", HEIGHT, iconX);
                PunteggioX.setText("" + px);
            } else {
                po++;
                JOptionPane.showMessageDialog(rootPane, "ha vinto", "Partita terminata ", HEIGHT, iconZero);
                Punteggio0.setText(""+po);
            }
        }
         if(checkForWin() || isBoardFull()){
            resetBoard();
            inizializzaMatrice();   
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
                javax.swing.UIManager.setLookAndFeel(info.getClassName());
                break;
            }
        }
    } catch (ClassNotFoundException ex) {
        java.util.logging.Logger.getLogger(VsUno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
        java.util.logging.Logger.getLogger(VsUno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
        java.util.logging.Logger.getLogger(VsUno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
        java.util.logging.Logger.getLogger(VsUno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
        public void run() {
            new VsUno().setVisible(true);
        }
    });
}

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnBack;
    private javax.swing.JButton BtnSetting;
    private javax.swing.JButton NewGame;
    private javax.swing.JLabel Punteggio0;
    private javax.swing.JLabel PunteggioX;
    private javax.swing.JLabel Sfondo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelTac;
    private javax.swing.JLabel jLabelTic;
    private javax.swing.JLabel jLabelToe;
    // End of variables declaration//GEN-END:variables
}
